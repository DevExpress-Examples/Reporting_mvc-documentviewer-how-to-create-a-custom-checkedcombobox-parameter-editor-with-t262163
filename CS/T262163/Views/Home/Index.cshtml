<script type="text/javascript">
    var textSeparator = ";";
    function OnListBoxSelectionChanged(listBox, args, checkComboBox) {
        if (args.index == 0)
            args.isSelected ? listBox.SelectAll() : listBox.UnselectAll();
        UpdateSelectAllItemState(listBox);
        UpdateText(checkComboBox, listBox);
    }
    function UpdateSelectAllItemState(listBox) {
        IsAllSelected(listBox) ? listBox.SelectIndices([0]) : listBox.UnselectIndices([0]);
    }
    function IsAllSelected(listBox) {
        for (var i = 1; i < listBox.GetItemCount(); i++)
            if (!listBox.GetItem(i).selected)
                return false;
        return true;
    }
    function UpdateText(checkComboBox, listBox) {
        var selectedItems = listBox.GetSelectedItems();
        checkComboBox.SetText(GetSelectedItemsText(selectedItems));
    }
    function SynchronizeListBoxValues(checkComboBox, args, listBox) {
        listBox.UnselectAll();
        var texts = checkComboBox.GetText().split(textSeparator);
        var values = GetValuesByTexts(listBox, texts);
        listBox.SelectValues(values);
        UpdateSelectAllItemState(listBox);
        UpdateText(checkComboBox, listBox);  // for remove non-existing texts        
    }
    function GetSelectedItemsText(items) {
        var texts = [];
        for (var i = 0; i < items.length; i++)
            if (items[i].index != 0)
                texts.push(items[i].text);
        return texts.join(textSeparator);
    }
    function GetValuesByTexts(listBox, texts) {
        var actualValues = [];
        var item;
        for (var i = 0; i < texts.length; i++) {
            item = listBox.FindItemByText(texts[i]);
            if (item != null)
                actualValues.push(item.value);
        }
        return actualValues;
    }
</script>

@Html.Action("DocumentViewerPartial")